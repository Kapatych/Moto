{"version":3,"sources":["components/product/product-button.js","components/product/product-info.js","components/product/product-gallery.js","components/tabs/index.js","components/product/product-spec.js","components/product/product.js","containers/product-page.js","components/slider/index.js","components/sizes/index.js","components/colors/index.js"],"names":["ProductButton","itemIndex","addProduct","to","className","type","onClick","ProductInfo","id","sizes","colors","title","price","thumb","onAddedToCart","cartItems","React","useState","selectedSize","setSelectedSize","selectedColor","setSelectedColor","findIndex","item","color","size","preparedProductForCart","quantity","total","toFixed","items","selected","onClickFunction","ProductGallery","gallery","brand","map","image","idx","key","src","alt","Tabs","children","active","setActive","openTab","e","target","dataset","index","child","data-index","props","label","ProductSpec","description","features","Product","product","onGoBack","activeBlock","setActiveBlock","preferences","img","aria-hidden","outerText","toLowerCase","ProductPage","name","this","match","params","productName","split","join","fetchHelmetItem","isLoading","isError","addProductToCart","goBack","history","Component","mapDispatchToProps","compose","withRouter","connect","cart","Slider","isDynamic","delay","timerId","useRef","useEffect","current","setTimeout","currentImageIndex","length","clearTimeout","undefined","turnImage","direction","showImage","data-direction","Sizes","Array","isArray","classNames","indexOf","data-size","Colors","data-color"],"mappings":"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","file":"static/js/3.f4618d0c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport './product-button.scss';\r\n\r\nconst ProductButton = ({itemIndex, addProduct}) => {\r\n\r\n    if (itemIndex !== -1) return <Link to='/cart' className='product__button product__button_active button'>In basket</Link>\r\n\r\n    return (\r\n        <button type=\"button\" className='product__button button' onClick={addProduct}>Add to Cart</button>\r\n    )\r\n};\r\n\r\nProductButton.propTypes = {\r\n    itemIndex: PropTypes.number,\r\n    addProduct: PropTypes.func,\r\n};\r\n\r\nexport default ProductButton;","import React from 'react';\r\nimport './product-info.scss';\r\nimport PropTypes from 'prop-types';\r\nimport Colors from \"../colors\";\r\nimport Sizes from \"../sizes\";\r\nimport ProductButton from \"./product-button\";\r\n\r\nconst ProductInfo = ({id, sizes, colors, title, price, thumb, onAddedToCart, cartItems}) => {\r\n\r\n    const [selectedSize, setSelectedSize] = React.useState(sizes[0]);\r\n    const [selectedColor, setSelectedColor] = React.useState(colors[0]);\r\n\r\n    const itemIndex = cartItems.findIndex(item =>\r\n        item.id === id &&\r\n        item.color === selectedColor &&\r\n        item.size === selectedSize);\r\n\r\n    const preparedProductForCart = {\r\n        id, title, price, thumb,\r\n        color: selectedColor,\r\n        size: selectedSize,\r\n        quantity: 1,\r\n        total: +price.toFixed(2),\r\n    };\r\n\r\n    return (\r\n        <div className='product__info'>\r\n\r\n            <div className='product__title'>{title}</div>\r\n\r\n            <div className='product__price price'>${price}</div>\r\n\r\n            <div className='product__caption'>Color</div>\r\n            <Colors items={colors} selected={selectedColor} onClickFunction={setSelectedColor}/>\r\n\r\n            <div className='product__caption'>Size</div>\r\n            <Sizes items={sizes} selected={selectedSize} onClickFunction={setSelectedSize}/>\r\n\r\n            <ProductButton itemIndex={itemIndex}\r\n                           addProduct={() => {\r\n                               onAddedToCart(preparedProductForCart)\r\n                           }}/>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nProductInfo.propTypes = {\r\n    id: PropTypes.number,\r\n    sizes: PropTypes.array,\r\n    colors: PropTypes.array,\r\n    title: PropTypes.string,\r\n    price: PropTypes.number,\r\n    thumb:PropTypes.string,\r\n    onAddedToCart: PropTypes.func,\r\n    cartItems: PropTypes.array,\r\n};\r\n\r\nexport default ProductInfo;","import React from 'react';\r\nimport './product-gallery.scss';\r\nimport PropTypes from 'prop-types';\r\nimport Slider from \"../slider\";\r\n\r\nconst ProductGallery = ({gallery, brand}) => {\r\n    return (\r\n        <div className='product__gallery'>\r\n            <Slider>\r\n                {\r\n                    gallery.map((image, idx) => {\r\n                        return <img key={idx} src={image} alt=\"\"/>\r\n                    })\r\n                }\r\n            </Slider>\r\n            <div className='product__brand'>{brand}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nProductGallery.propTypes = {\r\n    gallery: PropTypes.array,\r\n    brand: PropTypes.string,\r\n};\r\n\r\nexport default ProductGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './tabs.scss';\r\n\r\nconst Tabs = ({children}) => {\r\n    const [active, setActive] = React.useState(0);\r\n\r\n    const openTab = (e) => setActive(+e.target.dataset.index);\r\n\r\n    return (\r\n        <div className='tabs'>\r\n            <div className=\"tabs__labels\">\r\n                {children.map((child, index) => (\r\n                    <button\r\n                        key={index}\r\n                        className={`tabs__link ${index === active ? 'tabs__link_active' : ''}`}\r\n                        onClick={openTab}\r\n                        data-index={index}\r\n                    >{child.props.label}</button>\r\n                ))}\r\n            </div>\r\n            <div className=\"tabs__content\">\r\n                {children[active].props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nTabs.propTypes = {\r\n    children: PropTypes.array\r\n};\r\n\r\nexport default Tabs;\r\n","import React from 'react';\r\nimport './product-spec.scss';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from \"../tabs\";\r\n\r\nconst ProductSpec = ({description, features}) => {\r\n    return (\r\n        <div className='product__specifications'>\r\n            <Tabs>\r\n                <div label='overview'>\r\n                    <div className=\"product__description\">\r\n                        {description}\r\n                    </div>\r\n                </div>\r\n                <div label='features'>\r\n                    <ul className=\"product__description\">\r\n                        {\r\n                            features.map((item, idx) => {\r\n                                return (\r\n                                    <li key={idx}>{item}</li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n};\r\n\r\nProductSpec.propTypes = {\r\n    description: PropTypes.string,\r\n    features: PropTypes.array,\r\n};\r\n\r\nexport default ProductSpec;","import React from 'react';\r\nimport './product.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ProductInfo from \"./product-info\";\r\nimport ProductGallery from \"./product-gallery\";\r\nimport ProductSpec from \"./product-spec\";\r\n\r\n\r\nconst Product = ({product, onGoBack, onAddedToCart, cartItems}) => {\r\n\r\n    const [activeBlock, setActiveBlock] = React.useState('gallery');\r\n\r\n    const {id, title, brand, price, colors, sizes, features, description, preferences, img: {gallery}} = product;\r\n    return (\r\n        <div className='product'>\r\n            <div className='product__sidebar sidebar'>\r\n                <div className='link' onClick={onGoBack}>\r\n                    <i className=\"fa fa-chevron-left\" aria-hidden=\"true\"/>\r\n                    back to categories\r\n                </div>\r\n\r\n                <ProductInfo id={id}\r\n                             sizes={sizes}\r\n                             colors={colors}\r\n                             title={title}\r\n                             price={price}\r\n                             thumb={gallery[0]}\r\n                             onGoBack={onGoBack}\r\n                             onAddedToCart={onAddedToCart} cartItems={cartItems}/>\r\n\r\n                <Link to='/' className='product__share link'>\r\n                    <i className=\"fa fa-share-alt\" aria-hidden=\"true\"/>\r\n                    Share this\r\n                </Link>\r\n            </div>\r\n            <div className='product__content content'>\r\n                <div className='product__link link'  onClick={(e) => setActiveBlock(e.target.outerText.toLowerCase())}>\r\n                    {(activeBlock === 'gallery') ? 'specifications' : 'gallery'}\r\n                </div>\r\n\r\n                {\r\n                    (activeBlock === 'gallery')\r\n                        ? <ProductGallery brand={brand} gallery={gallery}/>\r\n                        : <ProductSpec description={description} preferences={preferences} features={features}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nProduct.propTypes = {\r\n    product: PropTypes.object,\r\n    onGoBack: PropTypes.func,\r\n    onAddedToCart: PropTypes.func,\r\n    cartItems: PropTypes.array,\r\n    activeBlock: PropTypes.string,\r\n};\r\n\r\nexport default Product;","import React, {Component} from 'react';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {addProductToCart, fetchHelmetItem} from \"../actions\";\r\n\r\nimport ErrorIndicator from \"../components/error/error-indicator\";\r\nimport Product from \"../components/product/product\";\r\nimport Spinner from \"../components/spinner\"\r\n\r\nclass ProductPage extends Component {\r\n\r\n    componentDidMount() {\r\n        let name = this.props.match.params.productName.split('-').join(' ');\r\n        this.props.fetchHelmetItem(name);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            product,\r\n            isLoading,\r\n            isError,\r\n            addProductToCart,\r\n            cartItems,\r\n            history: {goBack}\r\n        } = this.props;\r\n\r\n        if (isError) return <ErrorIndicator/>;\r\n\r\n        if (isLoading) return <Spinner/>;\r\n\r\n        return <Product product={product} onGoBack={goBack} onAddedToCart={addProductToCart} cartItems={cartItems}/>\r\n\r\n    }\r\n}\r\n\r\nProductPage.propTypes = {\r\n    product: PropTypes.object,\r\n    isLoading: PropTypes.bool,\r\n    isError: PropTypes.bool,\r\n    addProductToCart: PropTypes.func,\r\n    cartItems: PropTypes.array,\r\n    goBack: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = ({product: {product, isLoading, isError}, cart: {cartItems}}) => {\r\n    return {\r\n        product,\r\n        isLoading,\r\n        isError,\r\n        cartItems\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchHelmetItem,\r\n    addProductToCart,\r\n};\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(ProductPage);","import React, {useState, useEffect, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './slider.scss';\r\n\r\nconst Slider = ({children, isDynamic, delay}) => {\r\n    const [active, setActive] = useState(0);\r\n\r\n    let timerId = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (isDynamic) {\r\n            timerId.current = setTimeout(() => {\r\n                let currentImageIndex = active;\r\n                currentImageIndex = (currentImageIndex === children.length - 1) ? 0 : currentImageIndex + 1;\r\n                setActive(currentImageIndex);\r\n            }, delay);\r\n\r\n            return () => {\r\n                clearTimeout(timerId.current)\r\n            }\r\n        }\r\n    });\r\n\r\n    //If product contains only one image\r\n    if (children.length === 1) {\r\n        return <img src={children[0].props.src} className='single-image' alt=\"\"/>\r\n    }\r\n\r\n    if (children.length === undefined && typeof (children) === 'object') {\r\n        return children;\r\n    }\r\n\r\n    const turnImage = (e) => {\r\n        let currentImageIndex = active;\r\n        if (e.target.dataset.direction === 'next') {\r\n            currentImageIndex = (currentImageIndex === children.length - 1) ? 0 : currentImageIndex + 1;\r\n        } else {\r\n            currentImageIndex = (currentImageIndex === 0) ? children.length - 1 : currentImageIndex - 1;\r\n        }\r\n        clearTimeout(timerId.current);\r\n        return setActive(currentImageIndex);\r\n    };\r\n\r\n    const showImage = (e) => setActive(+e.target.dataset.index);\r\n\r\n    return (\r\n        <div className=\"slider\">\r\n            <div className='slider__main'>\r\n                <button onClick={turnImage}\r\n                        data-direction='prev'\r\n                        className=\"slider__button slider__prev\">\r\n                </button>\r\n                <div className=\"slider__content\">\r\n                    {children[active]}\r\n                </div>\r\n                <button onClick={turnImage}\r\n                        data-direction='next'\r\n                        className=\"slider__button slider__next\">\r\n                </button>\r\n            </div>\r\n            <div className='slider__dots'>\r\n                {\r\n                    children.map((child, idx) => {\r\n                        return (\r\n                            <button onClick={showImage}\r\n                                    key={idx}\r\n                                    className={`slider__dots-item${(idx === active) ? ' slider__dots-item_active' : ''}`}\r\n                                    data-index={idx}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nSlider.propTypes = {\r\n    children: PropTypes.array,\r\n    isDynamic: PropTypes.bool,\r\n    delay: PropTypes.number,\r\n};\r\n\r\nexport default Slider;","import React from 'react';\r\nimport './sizes.scss';\r\nimport classNames from \"classnames\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Sizes = ({items, selected, onClickFunction}) => {\r\n\r\n    if (!Array.isArray(selected)) selected = [selected];\r\n\r\n    return (\r\n        <div className='size'>\r\n            {\r\n                items.map((item, idx) => {\r\n                    const className = classNames('size__item', {'size__item_active': selected.indexOf(item) !== -1});\r\n                    return (\r\n                        <div key={idx} className={className} data-size={item}\r\n                             onClick={() => onClickFunction(item)}>\r\n                            {item}\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nSizes.propTypes = {\r\n    items: PropTypes.array,\r\n    selected: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n    onClickFunction: PropTypes.func,\r\n};\r\n\r\nexport default Sizes;","import React from 'react';\r\nimport classNames from \"classnames\";\r\nimport PropTypes from 'prop-types';\r\nimport './colors.scss';\r\n\r\nconst Colors = ({items, selected, onClickFunction}) => {\r\n\r\n    if (!Array.isArray(selected)) selected = [selected];\r\n\r\n    return (\r\n        <div className='colors'>\r\n            {\r\n                items.map((item, idx) => {\r\n                    const className = classNames('colors__item', {'colors__item_active': selected.indexOf(item) !== -1});\r\n\r\n                    return (\r\n                        <div data-color={item}\r\n                             key={idx}\r\n                             className={className}\r\n                             onClick={() => onClickFunction(item)}/>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nColors.propTypes = {\r\n    items: PropTypes.array,\r\n    selected: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.array,\r\n    ]),\r\n    onClickFunction: PropTypes.func,\r\n};\r\n\r\nexport default Colors;"],"sourceRoot":""}